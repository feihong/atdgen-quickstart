// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Int64 = require("bs-platform/lib/js/int64.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Atdgen_codec_runtime = require("@ahrefs/bs-atdgen-codec-runtime/src/atdgen_codec_runtime.bs.js");

Atdgen_codec_runtime.Decode[/* option_as_constr */25](Atdgen_codec_runtime.Decode[/* int */4]);

var partial_arg = Atdgen_codec_runtime.Encode[/* string */3];

var partial_arg$1 = Atdgen_codec_runtime.Encode[/* contramap */21];

function write__2(param) {
  return partial_arg$1(Int64.to_string, partial_arg, param);
}

var partial_arg$2 = Atdgen_codec_runtime.Decode[/* string */7];

var partial_arg$3 = Atdgen_codec_runtime.Decode[/* map */18];

function read__2(param) {
  return partial_arg$3(Caml_format.caml_int64_of_string, partial_arg$2, param);
}

var partial_arg$4 = Atdgen_codec_runtime.Encode[/* int */5];

var partial_arg$5 = Atdgen_codec_runtime.Encode[/* array */9];

function write__1(param) {
  return partial_arg$5(partial_arg$4, param);
}

var partial_arg$6 = Atdgen_codec_runtime.Decode[/* int */4];

var partial_arg$7 = Atdgen_codec_runtime.Decode[/* array */12];

function read__1(param) {
  return partial_arg$7(partial_arg$6, param);
}

var write_example = Atdgen_codec_runtime.Encode[/* make */0]((function (t) {
        return Atdgen_codec_runtime.Encode[/* obj */14](/* :: */[
                    Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* string */3], "text", t[/* text */0]),
                    /* :: */[
                      Atdgen_codec_runtime.Encode[/* field */12](undefined, write__1, "numbers", t[/* numbers */1]),
                      /* :: */[
                        Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* int64 */11], "level", t[/* level */2]),
                        /* :: */[
                          Atdgen_codec_runtime.Encode[/* field */12](undefined, write__2, "level2", t[/* level2 */3]),
                          /* :: */[
                            Atdgen_codec_runtime.Encode[/* field */12](undefined, Atdgen_codec_runtime.Encode[/* int */5], "lives", t[/* lives */4]),
                            /* :: */[
                              Atdgen_codec_runtime.Encode[/* field_o */13](undefined, Atdgen_codec_runtime.Encode[/* int */5], "stuff", t[/* stuff */5]),
                              /* [] */0
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]);
      }));

var read_example = Atdgen_codec_runtime.Decode[/* make */0]((function (json) {
        var partial_arg = Atdgen_codec_runtime.Decode[/* string */7];
        var partial_arg$1 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$2 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$3 = Atdgen_codec_runtime.Decode[/* int64 */9];
        var partial_arg$4 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$5 = Atdgen_codec_runtime.Decode[/* field */15];
        var partial_arg$6 = Atdgen_codec_runtime.Decode[/* int */4];
        var partial_arg$7 = Atdgen_codec_runtime.Decode[/* fieldOptional */17];
        return /* record */[
                /* text */Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                        return partial_arg$1("text", partial_arg, param);
                      }), json),
                /* numbers */Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                        return partial_arg$2("numbers", read__1, param);
                      }), json),
                /* level */Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                        return partial_arg$4("level", partial_arg$3, param);
                      }), json),
                /* level2 */Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                        return partial_arg$5("level2", read__2, param);
                      }), json),
                /* lives */Atdgen_codec_runtime.Decode[/* decode */1](Atdgen_codec_runtime.Decode[/* fieldDefault */16]("lives", 9, Atdgen_codec_runtime.Decode[/* int */4]), json),
                /* stuff */Atdgen_codec_runtime.Decode[/* decode */1]((function (param) {
                        return partial_arg$7("stuff", partial_arg$6, param);
                      }), json)
              ];
      }));

exports.read_example = read_example;
exports.write_example = write_example;
/*  Not a pure module */
